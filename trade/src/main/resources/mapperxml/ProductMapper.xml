<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sodse.trade.mapper.ProductMapper">
  <resultMap id="BaseResultMap" type="com.sodse.trade.domain.Product">
    <!--@mbg.generated-->
    <!--@Table micro_trade.product-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="main_img" jdbcType="VARCHAR" property="mainImg" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="brand" jdbcType="VARCHAR" property="brand" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="properties1" jdbcType="VARCHAR" property="properties1" />
    <result column="properties2" jdbcType="VARCHAR" property="properties2" />
    <result column="courier_fees" jdbcType="DECIMAL" property="courierFees" />
    <result column="merchant" jdbcType="VARCHAR" property="merchant" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `name`, price, main_img, content, brand, category, stock, flag, created, properties1, 
    properties2, courier_fees, merchant
  </sql>
  <select id="selectByExample" parameterType="com.sodse.trade.domain.ProductExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from micro_trade.product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from micro_trade.product
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from micro_trade.product
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.sodse.trade.domain.ProductExample">
    <!--@mbg.generated-->
    delete from micro_trade.product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sodse.trade.domain.Product">
    <!--@mbg.generated-->
    insert into micro_trade.product (id, `name`, price, 
      main_img, content, brand, 
      category, stock, flag, 
      created, properties1, properties2, 
      courier_fees, merchant)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{mainImg,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR}, 
      #{category,jdbcType=VARCHAR}, #{stock,jdbcType=INTEGER}, #{flag,jdbcType=INTEGER}, 
      #{created,jdbcType=TIMESTAMP}, #{properties1,jdbcType=VARCHAR}, #{properties2,jdbcType=VARCHAR}, 
      #{courierFees,jdbcType=DECIMAL}, #{merchant,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sodse.trade.domain.Product">
    <!--@mbg.generated-->
    insert into micro_trade.product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="mainImg != null">
        main_img,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="brand != null">
        brand,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="properties1 != null">
        properties1,
      </if>
      <if test="properties2 != null">
        properties2,
      </if>
      <if test="courierFees != null">
        courier_fees,
      </if>
      <if test="merchant != null">
        merchant,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="mainImg != null">
        #{mainImg,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="properties1 != null">
        #{properties1,jdbcType=VARCHAR},
      </if>
      <if test="properties2 != null">
        #{properties2,jdbcType=VARCHAR},
      </if>
      <if test="courierFees != null">
        #{courierFees,jdbcType=DECIMAL},
      </if>
      <if test="merchant != null">
        #{merchant,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sodse.trade.domain.ProductExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from micro_trade.product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update micro_trade.product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.mainImg != null">
        main_img = #{record.mainImg,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.brand != null">
        brand = #{record.brand,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=INTEGER},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.properties1 != null">
        properties1 = #{record.properties1,jdbcType=VARCHAR},
      </if>
      <if test="record.properties2 != null">
        properties2 = #{record.properties2,jdbcType=VARCHAR},
      </if>
      <if test="record.courierFees != null">
        courier_fees = #{record.courierFees,jdbcType=DECIMAL},
      </if>
      <if test="record.merchant != null">
        merchant = #{record.merchant,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update micro_trade.product
    set id = #{record.id,jdbcType=BIGINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      main_img = #{record.mainImg,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      brand = #{record.brand,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      stock = #{record.stock,jdbcType=INTEGER},
      flag = #{record.flag,jdbcType=INTEGER},
      created = #{record.created,jdbcType=TIMESTAMP},
      properties1 = #{record.properties1,jdbcType=VARCHAR},
      properties2 = #{record.properties2,jdbcType=VARCHAR},
      courier_fees = #{record.courierFees,jdbcType=DECIMAL},
      merchant = #{record.merchant,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sodse.trade.domain.Product">
    <!--@mbg.generated-->
    update micro_trade.product
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="mainImg != null">
        main_img = #{mainImg,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="brand != null">
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="properties1 != null">
        properties1 = #{properties1,jdbcType=VARCHAR},
      </if>
      <if test="properties2 != null">
        properties2 = #{properties2,jdbcType=VARCHAR},
      </if>
      <if test="courierFees != null">
        courier_fees = #{courierFees,jdbcType=DECIMAL},
      </if>
      <if test="merchant != null">
        merchant = #{merchant,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sodse.trade.domain.Product">
    <!--@mbg.generated-->
    update micro_trade.product
    set `name` = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      main_img = #{mainImg,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      brand = #{brand,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      properties1 = #{properties1,jdbcType=VARCHAR},
      properties2 = #{properties2,jdbcType=VARCHAR},
      courier_fees = #{courierFees,jdbcType=DECIMAL},
      merchant = #{merchant,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update micro_trade.product
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.name,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.price,jdbcType=DECIMAL}
        </foreach>
      </trim>
      <trim prefix="main_img = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.mainImg,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="content = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.content,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="brand = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.brand,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="category = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.category,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="stock = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.stock,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="flag = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.flag,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="created = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.created,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="properties1 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.properties1,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="properties2 = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.properties2,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="courier_fees = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.courierFees,jdbcType=DECIMAL}
        </foreach>
      </trim>
      <trim prefix="merchant = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.merchant,jdbcType=VARCHAR}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into micro_trade.product
    (id, `name`, price, main_img, content, brand, category, stock, flag, created, properties1, 
      properties2, courier_fees, merchant)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.name,jdbcType=VARCHAR}, #{item.price,jdbcType=DECIMAL}, 
        #{item.mainImg,jdbcType=VARCHAR}, #{item.content,jdbcType=VARCHAR}, #{item.brand,jdbcType=VARCHAR}, 
        #{item.category,jdbcType=VARCHAR}, #{item.stock,jdbcType=INTEGER}, #{item.flag,jdbcType=INTEGER}, 
        #{item.created,jdbcType=TIMESTAMP}, #{item.properties1,jdbcType=VARCHAR}, #{item.properties2,jdbcType=VARCHAR}, 
        #{item.courierFees,jdbcType=DECIMAL}, #{item.merchant,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.sodse.trade.domain.Product">
    <!--@mbg.generated-->
    insert into micro_trade.product
    (id, `name`, price, main_img, content, brand, category, stock, flag, created, properties1, 
      properties2, courier_fees, merchant)
    values
    (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{mainImg,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, 
      #{stock,jdbcType=INTEGER}, #{flag,jdbcType=INTEGER}, #{created,jdbcType=TIMESTAMP}, 
      #{properties1,jdbcType=VARCHAR}, #{properties2,jdbcType=VARCHAR}, #{courierFees,jdbcType=DECIMAL}, 
      #{merchant,jdbcType=VARCHAR})
    on duplicate key update 
    id = #{id,jdbcType=BIGINT}, 
    `name` = #{name,jdbcType=VARCHAR}, 
    price = #{price,jdbcType=DECIMAL}, 
    main_img = #{mainImg,jdbcType=VARCHAR}, 
    content = #{content,jdbcType=VARCHAR}, 
    brand = #{brand,jdbcType=VARCHAR}, 
    category = #{category,jdbcType=VARCHAR}, 
    stock = #{stock,jdbcType=INTEGER}, 
    flag = #{flag,jdbcType=INTEGER}, 
    created = #{created,jdbcType=TIMESTAMP}, 
    properties1 = #{properties1,jdbcType=VARCHAR}, 
    properties2 = #{properties2,jdbcType=VARCHAR}, 
    courier_fees = #{courierFees,jdbcType=DECIMAL}, 
    merchant = #{merchant,jdbcType=VARCHAR}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.sodse.trade.domain.Product">
    <!--@mbg.generated-->
    insert into micro_trade.product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="mainImg != null">
        main_img,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="brand != null">
        brand,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="properties1 != null">
        properties1,
      </if>
      <if test="properties2 != null">
        properties2,
      </if>
      <if test="courierFees != null">
        courier_fees,
      </if>
      <if test="merchant != null">
        merchant,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="mainImg != null">
        #{mainImg,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="properties1 != null">
        #{properties1,jdbcType=VARCHAR},
      </if>
      <if test="properties2 != null">
        #{properties2,jdbcType=VARCHAR},
      </if>
      <if test="courierFees != null">
        #{courierFees,jdbcType=DECIMAL},
      </if>
      <if test="merchant != null">
        #{merchant,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="mainImg != null">
        main_img = #{mainImg,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="brand != null">
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="properties1 != null">
        properties1 = #{properties1,jdbcType=VARCHAR},
      </if>
      <if test="properties2 != null">
        properties2 = #{properties2,jdbcType=VARCHAR},
      </if>
      <if test="courierFees != null">
        courier_fees = #{courierFees,jdbcType=DECIMAL},
      </if>
      <if test="merchant != null">
        merchant = #{merchant,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

<select id="findByPage" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
    from micro_trade.product
        limit #{start},#{end}
    </select>


  <select id="find" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from micro_trade.product
  </select>

  <select id="selectOneById" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from micro_trade.product
    where id=#{id,jdbcType=BIGINT}
  </select>
</mapper>