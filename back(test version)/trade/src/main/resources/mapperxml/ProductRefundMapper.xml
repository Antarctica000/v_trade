<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sodse.trade.mapper.ProductRefundMapper">
  <resultMap id="BaseResultMap" type="com.sodse.trade.domain.ProductRefund">
    <!--@mbg.generated-->
    <!--@Table micro_trade.product_refund-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="merchant_id" jdbcType="BIGINT" property="merchantId" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="is_refund" jdbcType="VARCHAR" property="isRefund" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, order_id, user_id, merchant_id, `comment`, is_refund
  </sql>
  <select id="selectByExample" parameterType="com.sodse.trade.domain.ProductRefundExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from micro_trade.product_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from micro_trade.product_refund
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from micro_trade.product_refund
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.sodse.trade.domain.ProductRefundExample">
    <!--@mbg.generated-->
    delete from micro_trade.product_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sodse.trade.domain.ProductRefund">
    <!--@mbg.generated-->
    insert into micro_trade.product_refund (id, order_id, user_id, 
      merchant_id, `comment`, is_refund
      )
    values (#{id,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{merchantId,jdbcType=BIGINT}, #{comment,jdbcType=VARCHAR}, #{isRefund,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sodse.trade.domain.ProductRefund">
    <!--@mbg.generated-->
    insert into micro_trade.product_refund
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="merchantId != null">
        merchant_id,
      </if>
      <if test="comment != null">
        `comment`,
      </if>
      <if test="isRefund != null">
        is_refund,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="merchantId != null">
        #{merchantId,jdbcType=BIGINT},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="isRefund != null">
        #{isRefund,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sodse.trade.domain.ProductRefundExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from micro_trade.product_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update micro_trade.product_refund
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.merchantId != null">
        merchant_id = #{record.merchantId,jdbcType=BIGINT},
      </if>
      <if test="record.comment != null">
        `comment` = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.isRefund != null">
        is_refund = #{record.isRefund,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update micro_trade.product_refund
    set id = #{record.id,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      merchant_id = #{record.merchantId,jdbcType=BIGINT},
      `comment` = #{record.comment,jdbcType=VARCHAR},
      is_refund = #{record.isRefund,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sodse.trade.domain.ProductRefund">
    <!--@mbg.generated-->
    update micro_trade.product_refund
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="merchantId != null">
        merchant_id = #{merchantId,jdbcType=BIGINT},
      </if>
      <if test="comment != null">
        `comment` = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="isRefund != null">
        is_refund = #{isRefund,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sodse.trade.domain.ProductRefund">
    <!--@mbg.generated-->
    update micro_trade.product_refund
    set order_id = #{orderId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      merchant_id = #{merchantId,jdbcType=BIGINT},
      `comment` = #{comment,jdbcType=VARCHAR},
      is_refund = #{isRefund,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update micro_trade.product_refund
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="order_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.orderId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.userId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="merchant_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.merchantId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="`comment` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.comment,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="is_refund = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.isRefund,jdbcType=VARCHAR}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update micro_trade.product_refund
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="order_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.orderId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.orderId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.userId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.userId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="merchant_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.merchantId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.merchantId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="`comment` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.comment != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.comment,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="is_refund = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.isRefund != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.isRefund,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into micro_trade.product_refund
    (id, order_id, user_id, merchant_id, `comment`, is_refund)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.orderId,jdbcType=BIGINT}, #{item.userId,jdbcType=BIGINT}, 
        #{item.merchantId,jdbcType=BIGINT}, #{item.comment,jdbcType=VARCHAR}, #{item.isRefund,jdbcType=VARCHAR}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.sodse.trade.domain.ProductRefund">
    <!--@mbg.generated-->
    insert into micro_trade.product_refund
    (id, order_id, user_id, merchant_id, `comment`, is_refund)
    values
    (#{id,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{merchantId,jdbcType=BIGINT}, 
      #{comment,jdbcType=VARCHAR}, #{isRefund,jdbcType=VARCHAR})
    on duplicate key update 
    id = #{id,jdbcType=BIGINT}, 
    order_id = #{orderId,jdbcType=BIGINT}, 
    user_id = #{userId,jdbcType=BIGINT}, 
    merchant_id = #{merchantId,jdbcType=BIGINT}, 
    `comment` = #{comment,jdbcType=VARCHAR}, 
    is_refund = #{isRefund,jdbcType=VARCHAR}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.sodse.trade.domain.ProductRefund">
    <!--@mbg.generated-->
    insert into micro_trade.product_refund
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="merchantId != null">
        merchant_id,
      </if>
      <if test="comment != null">
        `comment`,
      </if>
      <if test="isRefund != null">
        is_refund,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="merchantId != null">
        #{merchantId,jdbcType=BIGINT},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="isRefund != null">
        #{isRefund,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="merchantId != null">
        merchant_id = #{merchantId,jdbcType=BIGINT},
      </if>
      <if test="comment != null">
        `comment` = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="isRefund != null">
        is_refund = #{isRefund,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>